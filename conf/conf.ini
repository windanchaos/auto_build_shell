[remote-server]
#远程服务器路径
config_remote_server_paths=/app/appuser/apps/ROU/tomcat7-SystemRouter-8068 /app/appuser/apps/ROU/tomcat7-SystemRouter-8068 /app/appuser/apps/ROU/tomcat7-SystemRouter-8068 /app/appuser/apps/ROU/tomcat7-SystemRouter-8068
#远程服务器用户
config_remote_users=appuser appuser appuser appuser
#远程服务器ip
config_remote_ips=123.56.122.244 123.56.228.242 123.56.149.78 182.92.106.154
#远程服务器端口
config_remote_ports=22 22 22 22
#远程服务器密码 可以不设置如果你的记性足够好
config_remote_pwds=password1 password2 password3 password4
#maven打包用的远程profiles 如果没有就不设置
config_remote_profiles=prod1 prod2 prod3 prod4
#远程server_flags 一般习惯于设置成ip地址最后一个点后面的值
config_remote_server_flags=244 242 78 154
#远程重启shell目录 将restart脚本放到远程服务器指定的目录下，即可远程重启tomcat
config_remote_shell_dir=/app/appuser/bin
#服务器上最大备份文件数
config_remote_max_backup_file_num=1
#备份功能开关 [ on | off ]
config_remote_backup_switch=on

[local-server]
#本地tomcat根目录 
config_local_server_path=D:/dev/tomcat8-SystemRouter-8068

[project]
#项目远程build路径 工程的父级目录（本地和远程发布不使用统一路径）
config_remote_project_basepath=D:/ws/build1
#项目本地build路径 工程的父级目录
config_local_project_basepath=D:/ws/trunk1
#项目名称 
config_project_name=SystemRouter
#war包所在的maven子模块,只支持一个war包的工程 为空时代表在父及目录下的target中存在war包
config_war_sub_project_name=
#war包名
config_war_name=ROOT.war
#本地profile maven的profile参数 没有可以为空
config_local_profile=dev

[command]
#svn或git等检出代码的命令
config_checkout_command=svn update

[svn-authentication]
#svn账号
config_svn_username=houjinxin
#svn密码
config_svn_password=SHuGIsLkukk

[maven]
#maven本地路径 如果环境变量里配置了此处不用配置
config_maven_home=

[repository]
#项目git或svn地址
config_repository_url=svn://192.168.50.27/micro_crawler/Develop/projects/trunk/SystemRouter



